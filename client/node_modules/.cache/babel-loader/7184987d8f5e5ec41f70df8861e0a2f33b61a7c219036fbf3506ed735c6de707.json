{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\voting-dapp\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"../abi/Voting.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;\nconst ALCHEMY_RPC = process.env.REACT_APP_ALCHEMY_RPC;\nfunction Dashboard({\n  wallet,\n  walletType\n}) {\n  _s();\n  const [proposals, setProposals] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminAddress, setAdminAddress] = useState(\"\");\n  const [connectedAddress, setConnectedAddress] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [newProposal, setNewProposal] = useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });\n  const [viewResults, setViewResults] = useState({});\n  const getProvider = () => new ethers.providers.JsonRpcProvider(ALCHEMY_RPC);\n  const getSigner = async () => {\n    if (walletType === \"metamask\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      return provider.getSigner();\n    } else {\n      const provider = getProvider();\n      return new ethers.Wallet(wallet.privateKey, provider);\n    }\n  };\n  const checkAdmin = async () => {\n    if (!wallet) return;\n    try {\n      const provider = getProvider();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, provider);\n      const admin = await contract.admin();\n      setAdminAddress(admin);\n      const address = walletType === \"metamask\" ? await (await getSigner()).getAddress() : wallet.address;\n      setConnectedAddress(address);\n      setIsAdmin(address.toLowerCase() === admin.toLowerCase());\n    } catch (err) {\n      console.error(\"Admin check error:\", err);\n    }\n  };\n  const loadProposals = async () => {\n    if (!wallet) return;\n    setLoading(true);\n    try {\n      const provider = getProvider();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, provider);\n      const count = await contract.getProposalsCount();\n      const temp = [];\n      for (let i = 0; i < count; i++) {\n        const [question, options, voteCounts] = await contract.getProposal(i);\n        temp.push({\n          question,\n          options,\n          voteCounts,\n          id: i\n        });\n      }\n      setProposals(temp);\n    } catch (err) {\n      console.error(\"Load proposals error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const vote = async (proposalId, optionIndex) => {\n    if (!wallet) return alert(\"Connect wallet first\");\n    try {\n      const signer = await getSigner();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, signer);\n      const userAddress = walletType === \"metamask\" ? await signer.getAddress() : wallet.address;\n      const alreadyVoted = await contract.hasVotedOn(proposalId, userAddress);\n      if (alreadyVoted) return alert(\"You have already voted on this proposal.\");\n      const tx = await contract.vote(proposalId, optionIndex);\n      await tx.wait();\n      alert(\"Vote successful!\");\n      loadProposals();\n    } catch (err) {\n      console.error(\"Voting error:\", err);\n      alert(\"Failed to vote: \" + err.message);\n    }\n  };\n  const createProposal = async () => {\n    if (!wallet) return alert(\"Connect wallet first\");\n    const cleanedOptions = newProposal.options.filter(opt => opt.trim() !== \"\");\n    if (!newProposal.question.trim() || cleanedOptions.length < 2) {\n      return alert(\"Enter a question and at least two options.\");\n    }\n    try {\n      const signer = await getSigner();\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, signer);\n      const tx = await contract.createProposal(newProposal.question.trim(), cleanedOptions);\n      await tx.wait();\n      alert(\"Proposal created!\");\n      setNewProposal({\n        question: \"\",\n        options: [\"\", \"\"]\n      });\n      loadProposals();\n    } catch (err) {\n      console.error(\"Create proposal error:\", err);\n      alert(\"Only admin can create proposals or error occurred.\");\n    }\n  };\n  const toggleResults = proposalId => {\n    setViewResults(prev => ({\n      ...prev,\n      [proposalId]: !prev[proposalId]\n    }));\n  };\n  useEffect(() => {\n    if (wallet) {\n      checkAdmin();\n      loadProposals();\n    }\n  }, [wallet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white px-4 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-4 text-indigo-400\",\n        children: \"\\uD83D\\uDDF3 Voting Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1\",\n          children: [\"Connected wallet: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono text-green-400\",\n            children: connectedAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isAdmin ? \"text-green-500\" : \"text-red-500\",\n          children: isAdmin ? \"✅ You are Admin\" : \"❌ You are NOT Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-10 bg-gray-800 p-6 rounded shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-yellow-300\",\n          children: \"\\uD83D\\uDE80 Create New Proposal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Proposal Question\",\n          value: newProposal.question,\n          onChange: e => setNewProposal({\n            ...newProposal,\n            question: e.target.value\n          }),\n          className: \"w-full p-2 mb-3 rounded bg-gray-700 text-white placeholder-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), newProposal.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Option ${i + 1}`,\n          value: opt,\n          onChange: e => {\n            const newOpts = [...newProposal.options];\n            newOpts[i] = e.target.value;\n            setNewProposal({\n              ...newProposal,\n              options: newOpts\n            });\n          },\n          className: \"w-full p-2 mb-2 rounded bg-gray-700 text-white placeholder-gray-400\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setNewProposal({\n              ...newProposal,\n              options: [...newProposal.options, \"\"]\n            }),\n            className: \"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white\",\n            children: \"\\u2795 Add Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createProposal,\n            className: \"bg-green-600 hover:bg-green-700 px-4 py-2 rounded text-white\",\n            children: \"\\u2705 Create Proposal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: \"Loading proposals...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), !loading && proposals.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No proposals available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 48\n      }, this), !loading && proposals.map(p => {\n        const totalVotes = p.voteCounts.reduce((sum, c) => sum + parseInt(c.toString()), 0);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 p-6 bg-gray-800 rounded shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-3 text-cyan-300\",\n            children: p.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), p.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center py-2 border-b border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: opt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-400\",\n                children: [p.voteCounts[i].toString(), \" votes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => vote(p.id, i),\n                className: \"bg-indigo-600 hover:bg-indigo-700 px-3 py-1 rounded text-sm text-white\",\n                children: \"Vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this)), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleResults(p.id),\n            className: \"mt-3 bg-yellow-500 hover:bg-yellow-600 px-4 py-2 rounded text-white\",\n            children: viewResults[p.id] ? \"Hide Results\" : \"View Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), viewResults[p.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 bg-gray-700 p-4 rounded\",\n            children: p.options.map((opt, i) => {\n              const count = parseInt(p.voteCounts[i].toString());\n              const percentage = totalVotes === 0 ? 0 : (count / totalVotes * 100).toFixed(1);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-1 text-sm\",\n                children: [opt, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-green-400\",\n                  children: [percentage, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 34\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"E1Yn7E+0mq9erbB8EWiuQJVL8a8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","ethers","abi","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","process","env","REACT_APP_CONTRACT_ADDRESS","ALCHEMY_RPC","REACT_APP_ALCHEMY_RPC","Dashboard","wallet","walletType","_s","proposals","setProposals","isAdmin","setIsAdmin","adminAddress","setAdminAddress","connectedAddress","setConnectedAddress","loading","setLoading","newProposal","setNewProposal","question","options","viewResults","setViewResults","getProvider","providers","JsonRpcProvider","getSigner","provider","Web3Provider","window","ethereum","send","Wallet","privateKey","checkAdmin","contract","Contract","admin","address","getAddress","toLowerCase","err","console","error","loadProposals","count","getProposalsCount","temp","i","voteCounts","getProposal","push","id","vote","proposalId","optionIndex","alert","signer","userAddress","alreadyVoted","hasVotedOn","tx","wait","message","createProposal","cleanedOptions","filter","opt","trim","length","toggleResults","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","newOpts","onClick","p","totalVotes","reduce","sum","c","parseInt","toString","percentage","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/voting-dapp/client/src/pages/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport abi from \"../abi/Voting.json\";\r\n\r\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;\r\nconst ALCHEMY_RPC = process.env.REACT_APP_ALCHEMY_RPC;\r\n\r\nfunction Dashboard({ wallet, walletType }) {\r\n  const [proposals, setProposals] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [adminAddress, setAdminAddress] = useState(\"\");\r\n  const [connectedAddress, setConnectedAddress] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [newProposal, setNewProposal] = useState({ question: \"\", options: [\"\", \"\"] });\r\n  const [viewResults, setViewResults] = useState({});\r\n\r\n  const getProvider = () => new ethers.providers.JsonRpcProvider(ALCHEMY_RPC);\r\n\r\n  const getSigner = async () => {\r\n    if (walletType === \"metamask\") {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n      return provider.getSigner();\r\n    } else {\r\n      const provider = getProvider();\r\n      return new ethers.Wallet(wallet.privateKey, provider);\r\n    }\r\n  };\r\n\r\n  const checkAdmin = async () => {\r\n    if (!wallet) return;\r\n    try {\r\n      const provider = getProvider();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, provider);\r\n      const admin = await contract.admin();\r\n      setAdminAddress(admin);\r\n\r\n      const address =\r\n        walletType === \"metamask\"\r\n          ? await (await getSigner()).getAddress()\r\n          : wallet.address;\r\n\r\n      setConnectedAddress(address);\r\n      setIsAdmin(address.toLowerCase() === admin.toLowerCase());\r\n    } catch (err) {\r\n      console.error(\"Admin check error:\", err);\r\n    }\r\n  };\r\n\r\n  const loadProposals = async () => {\r\n    if (!wallet) return;\r\n    setLoading(true);\r\n    try {\r\n      const provider = getProvider();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, provider);\r\n      const count = await contract.getProposalsCount();\r\n      const temp = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const [question, options, voteCounts] = await contract.getProposal(i);\r\n        temp.push({ question, options, voteCounts, id: i });\r\n      }\r\n      setProposals(temp);\r\n    } catch (err) {\r\n      console.error(\"Load proposals error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const vote = async (proposalId, optionIndex) => {\r\n    if (!wallet) return alert(\"Connect wallet first\");\r\n    try {\r\n      const signer = await getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, signer);\r\n      const userAddress =\r\n        walletType === \"metamask\"\r\n          ? await signer.getAddress()\r\n          : wallet.address;\r\n\r\n      const alreadyVoted = await contract.hasVotedOn(proposalId, userAddress);\r\n      if (alreadyVoted) return alert(\"You have already voted on this proposal.\");\r\n\r\n      const tx = await contract.vote(proposalId, optionIndex);\r\n      await tx.wait();\r\n      alert(\"Vote successful!\");\r\n      loadProposals();\r\n    } catch (err) {\r\n      console.error(\"Voting error:\", err);\r\n      alert(\"Failed to vote: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const createProposal = async () => {\r\n    if (!wallet) return alert(\"Connect wallet first\");\r\n    const cleanedOptions = newProposal.options.filter((opt) => opt.trim() !== \"\");\r\n    if (!newProposal.question.trim() || cleanedOptions.length < 2) {\r\n      return alert(\"Enter a question and at least two options.\");\r\n    }\r\n    try {\r\n      const signer = await getSigner();\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, abi, signer);\r\n      const tx = await contract.createProposal(newProposal.question.trim(), cleanedOptions);\r\n      await tx.wait();\r\n      alert(\"Proposal created!\");\r\n      setNewProposal({ question: \"\", options: [\"\", \"\"] });\r\n      loadProposals();\r\n    } catch (err) {\r\n      console.error(\"Create proposal error:\", err);\r\n      alert(\"Only admin can create proposals or error occurred.\");\r\n    }\r\n  };\r\n\r\n  const toggleResults = (proposalId) => {\r\n    setViewResults((prev) => ({ ...prev, [proposalId]: !prev[proposalId] }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (wallet) {\r\n      checkAdmin();\r\n      loadProposals();\r\n    }\r\n  }, [wallet]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-white px-4 py-8\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <h1 className=\"text-4xl font-bold mb-4 text-indigo-400\">🗳 Voting Dashboard</h1>\r\n        <div className=\"mb-6\">\r\n          <p className=\"mb-1\">\r\n            Connected wallet: <span className=\"font-mono text-green-400\">{connectedAddress}</span>\r\n          </p>\r\n          <p className={isAdmin ? \"text-green-500\" : \"text-red-500\"}>\r\n            {isAdmin ? \"✅ You are Admin\" : \"❌ You are NOT Admin\"}\r\n          </p>\r\n        </div>\r\n\r\n        {isAdmin && (\r\n          <div className=\"mb-10 bg-gray-800 p-6 rounded shadow-lg\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-yellow-300\">🚀 Create New Proposal</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Proposal Question\"\r\n              value={newProposal.question}\r\n              onChange={(e) => setNewProposal({ ...newProposal, question: e.target.value })}\r\n              className=\"w-full p-2 mb-3 rounded bg-gray-700 text-white placeholder-gray-400\"\r\n            />\r\n            {newProposal.options.map((opt, i) => (\r\n              <input\r\n                key={i}\r\n                type=\"text\"\r\n                placeholder={`Option ${i + 1}`}\r\n                value={opt}\r\n                onChange={(e) => {\r\n                  const newOpts = [...newProposal.options];\r\n                  newOpts[i] = e.target.value;\r\n                  setNewProposal({ ...newProposal, options: newOpts });\r\n                }}\r\n                className=\"w-full p-2 mb-2 rounded bg-gray-700 text-white placeholder-gray-400\"\r\n              />\r\n            ))}\r\n            <div className=\"flex gap-2 mt-2\">\r\n              <button\r\n                onClick={() =>\r\n                  setNewProposal({ ...newProposal, options: [...newProposal.options, \"\"] })\r\n                }\r\n                className=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white\"\r\n              >\r\n                ➕ Add Option\r\n              </button>\r\n              <button\r\n                onClick={createProposal}\r\n                className=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded text-white\"\r\n              >\r\n                ✅ Create Proposal\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loading && <p className=\"text-gray-400\">Loading proposals...</p>}\r\n\r\n        {!loading && proposals.length === 0 && <p>No proposals available.</p>}\r\n\r\n        {!loading &&\r\n          proposals.map((p) => {\r\n            const totalVotes = p.voteCounts.reduce((sum, c) => sum + parseInt(c.toString()), 0);\r\n            return (\r\n              <div key={p.id} className=\"mb-8 p-6 bg-gray-800 rounded shadow-lg\">\r\n                <h3 className=\"text-lg font-bold mb-3 text-cyan-300\">{p.question}</h3>\r\n                {p.options.map((opt, i) => (\r\n                  <div\r\n                    key={i}\r\n                    className=\"flex justify-between items-center py-2 border-b border-gray-700\"\r\n                  >\r\n                    <div>{opt}</div>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <span className=\"text-sm text-gray-400\">{p.voteCounts[i].toString()} votes</span>\r\n                      <button\r\n                        onClick={() => vote(p.id, i)}\r\n                        className=\"bg-indigo-600 hover:bg-indigo-700 px-3 py-1 rounded text-sm text-white\"\r\n                      >\r\n                        Vote\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                {isAdmin && (\r\n                  <button\r\n                    onClick={() => toggleResults(p.id)}\r\n                    className=\"mt-3 bg-yellow-500 hover:bg-yellow-600 px-4 py-2 rounded text-white\"\r\n                  >\r\n                    {viewResults[p.id] ? \"Hide Results\" : \"View Results\"}\r\n                  </button>\r\n                )}\r\n                {viewResults[p.id] && (\r\n                  <div className=\"mt-4 bg-gray-700 p-4 rounded\">\r\n                    {p.options.map((opt, i) => {\r\n                      const count = parseInt(p.voteCounts[i].toString());\r\n                      const percentage = totalVotes === 0 ? 0 : ((count / totalVotes) * 100).toFixed(1);\r\n                      return (\r\n                        <div key={i} className=\"mb-1 text-sm\">\r\n                          {opt}: <span className=\"text-green-400\">{percentage}%</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}